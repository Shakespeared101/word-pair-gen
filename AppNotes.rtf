{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 Menlo-Italic;}
{\colortbl;\red255\green255\blue255;\red175\green180\blue186;\red24\green25\blue27;\red57\green57\blue57;
\red255\green255\blue255;\red0\green0\blue0;\red254\green193\blue89;\red13\green14\blue20;\red121\green213\blue255;
\red149\green155\blue194;\red57\green57\blue57;}
{\*\expandedcolortbl;;\cssrgb\c74118\c75686\c77647;\cssrgb\c12549\c12941\c14118;\cssrgb\c29020\c29020\c29020;
\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;\cssrgb\c100000\c79608\c41961;\cssrgb\c5882\c6667\c10196;\cssrgb\c53725\c86667\c100000;
\cssrgb\c65098\c67451\c80392;\cssrgb\c29020\c29020\c29020;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Flutter\
\
Material Design\
\pard\pardeftab720\partightenfactor0

\f1\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
Material Design is a design language developed by Google in 2014. Expanding on the "cards" that debuted in Google Now, Material Design uses more grid-based layouts, responsive animations and transitions, padding, and depth effects such as lighting and shadows\
\
\
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf4 \cb5 Material App : \
A convenience widget that wraps a number of widgets that are commonly required for Material Design applications. It builds upon a\'a0{\field{\*\fldinst{HYPERLINK "https://api.flutter.dev/flutter/widgets/WidgetsApp-class.html"}}{\fldrslt \cf0 WidgetsApp}}\'a0by adding material-design specific functionality, such as\'a0{\field{\*\fldinst{HYPERLINK "https://api.flutter.dev/flutter/material/AnimatedTheme-class.html"}}{\fldrslt \cf0 AnimatedTheme}}\'a0and\'a0{\field{\*\fldinst{HYPERLINK "https://api.flutter.dev/flutter/widgets/GridPaper-class.html"}}{\fldrslt \cf0 GridPaper}}.\
\
Scaffold Class:\
\pard\pardeftab720\sa320\partightenfactor0
\cf4 Implements the basic Material Design visual layout structure.\
This class provides APIs for showing drawers and bottom sheets.\
To display a persistent bottom sheet, obtain the\'a0{\field{\*\fldinst{HYPERLINK "https://api.flutter.dev/flutter/material/ScaffoldState-class.html"}}{\fldrslt ScaffoldState}}\'a0for the current\'a0{\field{\*\fldinst{HYPERLINK "https://api.flutter.dev/flutter/widgets/BuildContext-class.html"}}{\fldrslt BuildContext}}\'a0via\'a0{\field{\*\fldinst{HYPERLINK "https://api.flutter.dev/flutter/material/Scaffold/of.html"}}{\fldrslt Scaffold.of}}\'a0and use the\'a0{\field{\*\fldinst{HYPERLINK "https://api.flutter.dev/flutter/material/ScaffoldState/showBottomSheet.html"}}{\fldrslt ScaffoldState.showBottomSheet}}\'a0function.\
Inside MaterialApp to change the theme of the app (Primary Colour theme),\
Use primarySwatch: 
\f2\fs24 \cf7 \cb8 \outl0\strokewidth0 \strokec7 Colors\cf9 \strokec9 .\cf10 \strokec10 deepPurple\cf9 \strokec9 ,\cf10 \cb1 \strokec10 \

\f0\fs32 \cf4 \cb5 \outl0\strokewidth0  instead of primaryColor: 
\f2\fs24 \cf7 \cb8 \outl0\strokewidth0 \strokec7 Colors\cf9 \strokec9 .\cf10 \strokec10 deepPurple\cf9 \strokec9 ,\
\pard\pardeftab720\sa320\partightenfactor0

\f0\fs32 \cf4 \cb5 \outl0\strokewidth0 Inside the Scaffold (Mainframe) use Center to place its child widget/something in the centre of the screen\
Install packages required for your app from pub.dev\
The package we\'92re using now for WordPair Get is \'91English Words\'92\
Inside the MaterialApp we use a variable and to make that variable not assignable to anything else directly we use the final keyword and not the const keyword for something that can be dynamically changing.\
WordPair is an inbuilt object which comes with the English Words package\
Some methods are attached when you\'92re printing variables inside Text widgets like PascalCase (it works like how I typed it), lowercase, uppercase, etc.\
List View - {\field{\*\fldinst{HYPERLINK "https://api.flutter.dev/flutter/widgets/ListView-class.html"}}{\fldrslt \cf11 \cb5 \outl0\strokewidth0 \strokec11 ListView}}\cf11 \cb5 \outl0\strokewidth0 \strokec11 \'a0is the most commonly used scrolling widget. It displays its children one after another in the scroll direction. In the cross axis, the children are required to fill the\'a0{\field{\*\fldinst{HYPERLINK "https://api.flutter.dev/flutter/widgets/ListView-class.html"}}{\fldrslt ListView}}.\
\pard\pardeftab720\sa320\partightenfactor0
\cf11 If non-null, the\'a0{\field{\*\fldinst{HYPERLINK "https://api.flutter.dev/flutter/widgets/ListView/itemExtent.html"}}{\fldrslt itemExtent}}\'a0forces the children to have the given extent in the scroll direction.\
Note : The list we first create in the app using this is static\
\pard\pardeftab720\partightenfactor0

\f2\fs24 \cf10 \cb8 \strokec10 itemBuilder\cf9 \strokec9 :\cf10 \strokec10  (
\f3\i context
\f2\i0 \cf9 \strokec9 ,\cf10 \strokec10  
\f3\i item
\f2\i0 )\{\cb1  - to iterate thru the items\

\f0\fs32 \cf11 \cb5 \strokec11 \
\pard\pardeftab720\sa320\partightenfactor0
\cf11 Wordpair\
Divider\
Wordpair\
And so on\
If the divider is odd return material design divider - you can add height and thickness but that\'92s optional\
To create index\
Set this to our item\
To calculate (no. of word-pairs in the list view) - (the divider digits)\
Generate new word-airs as we scroll down \
If index>=randomwordpair length\
Take random word-airs and then call addAll() and inside that generate word pair and add on a method to that called take to specify no of records to be taken as input as we scroll\
To create a separate list of favourites\
We do this\
\pard\pardeftab720\partightenfactor0

\f3\i\fs24 \cf9 \cb8 \strokec9 class
\f2\i0 \cf10 \strokec10  \cf7 \strokec7 RandomWordsState\cf10 \strokec10  
\f3\i \cf9 \strokec9 extends
\f2\i0 \cf10 \strokec10  \cf7 \strokec7 State\cf10 \strokec10 <\cf7 \strokec7 RandomWords\cf10 \strokec10 > \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf10 \cb8   
\f3\i \cf9 \strokec9 final
\f2\i0 \cf10 \strokec10  _randomWordPairs \cf9 \strokec9 =\cf10 \strokec10  \cf9 \strokec9 <\cf7 \strokec7 WordPair\cf9 \strokec9 >\cf10 \strokec10 []\cf9 \strokec9 ;\cf10 \cb1 \strokec10 \
\cb8   
\f3\i \cf9 \strokec9 final
\f2\i0 \cf10 \strokec10  _savedWordPairs \cf9 \strokec9 =\cf10 \strokec10  \cf7 \strokec7 Set\cf10 \strokec10 <\cf7 \strokec7 WordPair\cf10 \strokec10 >()\cf9 \strokec9 ;\cf10 \cb1 \strokec10 \
\pard\pardeftab720\sa320\partightenfactor0

\f0\fs32 \cf11 \cb5 \strokec11 \
Here Set is used like the DISTINCT keyword in SQL\
\
\pard\pardeftab720\sa320\partightenfactor0

\f2\fs24 \cf10 \cb1 \strokec10 \

\f0\fs32 \cf4 \cb5 \outl0\strokewidth0 \
}